@using Blazorise
@using NetliveComponents.Mapper.Tailwind
@using NetliveComponents.Models

<Validation MessageLocalizer="@MessageLocalizer">
    <Field>
        @if (!string.IsNullOrEmpty(Label))
        {
            <FieldLabel>@Label</FieldLabel>
        }
        <FieldBody>
            <FileEdit 
                Placeholder="@Placeholder"
                      Changed="@OnChanged">
                      
                <Feedback>
                    <ValidationError />
                </Feedback>
            </FileEdit>
        </FieldBody>
    </Field>
</Validation>

@code {
    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public string Placeholder { get; set; } = "";

    [Parameter]
    public string CurrentValue { get; set; }

    [Parameter]
    public EventCallback<string> CurrentValueChanged { get; set; }

    [Parameter]
    public Func<string, bool> Validation { get; set; }

    [Parameter]
    public string ValidationErrorMessage { get; set; } = "null";

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalAttributes { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (CurrentValueChanged.HasDelegate)
        {
            await CurrentValueChanged.InvokeAsync(CurrentValue);
        }
    }

    [CascadingParameter]
    public Func<string, IEnumerable<string>, string> MessageLocalizer { get; set; }



    async Task OnChanged(FileChangedEventArgs e)
    {
       
    }
}