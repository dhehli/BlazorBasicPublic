@using Blazorise
@using NetliveComponents.Mapper.Tailwind
@using NetliveComponents.Models
@using System.Linq.Expressions

<Validation MessageLocalizer="@MessageLocalizer">
    <Field>
        @if (!string.IsNullOrEmpty(Label))
        {
            <FieldLabel>@Label</FieldLabel>
        }
        <FieldBody>
            <FileEdit Placeholder="@Placeholder"
                      Changed="@OnValueChanged">
                <Feedback>
                    <ValidationError />
                </Feedback>
            </FileEdit>
        </FieldBody>
    </Field>
</Validation>

@code {
    [Parameter]
    public string Label { get; set; } = "";

    [Parameter]
    public string Placeholder { get; set; } = "";

    [Parameter]
    public string CurrentValue { get; set; }

    [Parameter]
    public EventCallback<string> CurrentValueChanged { get; set; }

    [Parameter]
    public Expression<Func<string>> CurrentValueExpression { get; set; }

    [Parameter]
    public NetliveInputType InputType { get; set; } = NetliveInputType.Text;

    [CascadingParameter]
    public Func<string, IEnumerable<string>, string> MessageLocalizer { get; set; }

    async Task OnValueChanged(FileChangedEventArgs e)
    {



    }

    private TextRole BlazoriseInputType => BlazoriseMapper.GetBlazoriseInputType(InputType);
}